<!doctype lake><title>Dart语法入门</title><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><blockquote data-lake-id="u7fbdc386" id="u7fbdc386"><p data-lake-id="uf57e9c1c" id="uf57e9c1c" style="text-align: justify"><span data-lake-id="u8c3d6f46" id="u8c3d6f46">本文以Dart官网《</span><a href="https://www.dartcn.com/guides/language/language-tour" target="_blank" data-lake-id="uac4a0436" id="uac4a0436"><span data-lake-id="u09162d18" id="u09162d18">Dart编程概览</span></a><span data-lake-id="u5a3ea3d6" id="u5a3ea3d6">》为线索整理，并对其中和其他语言差异化部分语法进行了代码验证，整体语法和代码风格上，Dart有Java的影子（面向对象,抽象类，泛型，枚举类型等），但在异步编程上和JavaScript更接近。因为DVM对热重载的良好支持，是Flutter选择其作为开发语言的重要原因之一。</span></p></blockquote><h3 data-lake-id="bc120eab" id="bc120eab"><strong><span data-lake-id="u6ce69495" id="u6ce69495">1. Dart概述</span></strong></h3><p data-lake-id="u9c1bb065" id="u9c1bb065"><br></p><p data-lake-id="u8a18f361" id="u8a18f361"><span data-lake-id="ub0b3e552" id="ub0b3e552">dart官网：</span><a href="https://dart.dev/get-dart" target="_blank" data-lake-id="u39c27ebd" id="u39c27ebd"><span data-lake-id="u0a6a777b" id="u0a6a777b">https://dart.dev</span></a><span data-lake-id="u23481d3b" id="u23481d3b"><br /></span><span data-lake-id="ue2b395e7" id="ue2b395e7">dart中文网：</span><a href="https://www.dartcn.com/" target="_blank" data-lake-id="u5dfa12f4" id="u5dfa12f4"><span data-lake-id="uadbde3aa" id="uadbde3aa">https://www.dartcn.com/</span></a><span data-lake-id="uc4ac9f6f" id="uc4ac9f6f"><br /></span><span data-lake-id="u25f0a6aa" id="u25f0a6aa">Dart是谷歌开发的计算机编程语言，亮相于2011年10月，最新的版本是Dart2。Dart诞生的原因是谷歌的工程师出于对JavaScript的不满，诞生的初期也赢得了部分前端开发者的青睐。但是这时JavaScript借着NodeJS火了起来，在前端、后端、移动端无孔不入，Dart就渐渐被人遗忘了，可见Dart本身是具有很强的实力的，只是不大走运。</span></p><p data-lake-id="u481d3db2" id="u481d3db2"><span data-lake-id="ubbb20966" id="ubbb20966">谷歌并没有放弃Dart，不遗余力的推广Dart：谷歌的Angular提供了Dart版本，指定Dart为新系统Fuchsia的官方开发语言，Dart为移动UI框架Flutter的开发语言，因此Dart又重新回到了人们的视野中。<br /></span><span data-lake-id="u0f9ce03f" id="u0f9ce03f">Dart通常情况下运行在DartVM上，但是在特定情况下它也可以编译成本地代码运行在硬件上，比如Flutter会将代码编译成指定平台的本地代码来提高性能。</span></p><p data-lake-id="ua64dc3a1" id="ua64dc3a1"><br></p><p data-lake-id="u7c70600c" id="u7c70600c"><span data-lake-id="ua8485e4c" id="ua8485e4c">Chrome浏览器市场占比（世界范围）</span></p><p data-lake-id="u096f10a8" id="u096f10a8"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2022%2Fpng%2F22931%2F1653445875205-56b19f65-ac9a-452d-a7d5-be250c8ab791.png%22%2C%22taskId%22%3A%22u3fbf8645-bc47-4e7b-ba46-e676ebcecc4%22%2C%22clientId%22%3A%22u111593c0-ecdb-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A695%2C%22height%22%3A470%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A781661%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1390%2C%22originHeight%22%3A940%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22IE%20EDGE%20SAFARI%20CHROME%20FIREFOX%20OPERA%2010.07%25%200.97%25%202.43%25%2066.64%25%209.61%25%207.86%25%20DESKTOP%20BROWSER%20MARKET%20SHARE%20WORLDWIDE-APRIL%202022%20DESKTOP%20BROWSER%20MARKET%20SHARE%20WORLDWIDE%20EDIT%20CHART%20DATA%20APR%202021%20-APR%202022%2070%25%2056%25%20425%20STATCOUNTER%2020%25%2014%E5%85%8B%200%25%20PT%202022%20FET5%202022%20MAY%202021%200GR%20200*%20LUNE%202021%20MAT2022%20IGE%20O%20FIREFOX%20OPERE%20OPERE%20CTHER%20(DOMED)%20EDGE%20SAVE%20CHART%20IMAGE(.PNG)%20DOWNLOAD%20DATA%20(.CSV)%20EMBED%20HTML%20%3CDIVIDI'DESKTOP-BROWSER%20WWWMONTHLY-202104-202204%20VICTHICTH%20'600%20HEIG%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1132.6003%2C%22y%22%3A36.153667%2C%22width%22%3A19.92840000000001%2C%22height%22%3A19.195706%2C%22text%22%3A%22IE%22%7D%2C%7B%22x%22%3A296.04456%2C%22y%22%3A37.434406%2C%22width%22%3A34.71096%2C%22height%22%3A18.283448%2C%22text%22%3A%22EDGE%22%7D%2C%7B%22x%22%3A505.55338%2C%22y%22%3A37.82775%2C%22width%22%3A44.472519999999975%2C%22height%22%3A15.406143999999998%2C%22text%22%3A%22SAFARI%22%7D%2C%7B%22x%22%3A87.469696%2C%22y%22%3A38.57109%2C%22width%22%3A56.819974%2C%22height%22%3A16.296105000000004%2C%22text%22%3A%22CHROME%22%7D%2C%7B%22x%22%3A714.87415%2C%22y%22%3A38.695496%2C%22width%22%3A50.79821000000004%2C%22height%22%3A14.248744000000002%2C%22text%22%3A%22FIREFOX%22%7D%2C%7B%22x%22%3A925.0913%2C%22y%22%3A39.274178%2C%22width%22%3A45.4908999999999%2C%22height%22%3A15.523372000000002%2C%22text%22%3A%22OPERA%22%7D%2C%7B%22x%22%3A297.39487%2C%22y%22%3A64.077835%2C%22width%22%3A140.64792999999997%2C%22height%22%3A39.68765500000001%2C%22text%22%3A%2210.07%25%22%7D%2C%7B%22x%22%3A1137.3892%2C%22y%22%3A65.141975%2C%22width%22%3A115.10119999999984%2C%22height%22%3A37.862905%2C%22text%22%3A%220.97%25%22%7D%2C%7B%22x%22%3A927.2256%2C%22y%22%3A65.8291%2C%22width%22%3A116.62390000000005%2C%22height%22%3A38.462495000000004%2C%22text%22%3A%222.43%25%22%7D%2C%7B%22x%22%3A87.60168%2C%22y%22%3A66.39109%2C%22width%22%3A141.27857999999998%2C%22height%22%3A35.037064%2C%22text%22%3A%2266.64%25%22%7D%2C%7B%22x%22%3A506.80972%2C%22y%22%3A66.427185%2C%22width%22%3A116.87521999999996%2C%22height%22%3A36.297015%2C%22text%22%3A%229.61%25%22%7D%2C%7B%22x%22%3A719.57886%2C%22y%22%3A67.32638%2C%22width%22%3A114.61517000000003%2C%22height%22%3A35.03483%2C%22text%22%3A%227.86%25%22%7D%2C%7B%22x%22%3A470.09912%2C%22y%22%3A137.58243%2C%22width%22%3A438.70203%2C%22height%22%3A20.96666000000002%2C%22text%22%3A%22DESKTOP%20BROWSER%20MARKET%20SHARE%20WORLDWIDE-APRIL%202022%22%7D%2C%7B%22x%22%3A112.614426%2C%22y%22%3A250.30775%2C%22width%22%3A595.1525740000001%2C%22height%22%3A32.27769999999998%2C%22text%22%3A%22DESKTOP%20BROWSER%20MARKET%20SHARE%20WORLDWIDE%22%7D%2C%7B%22x%22%3A1153.3276%2C%22y%22%3A261.2002%2C%22width%22%3A120.38689999999997%2C%22height%22%3A18.000499999999988%2C%22text%22%3A%22EDIT%20CHART%20DATA%22%7D%2C%7B%22x%22%3A111.69627%2C%22y%22%3A286.1508%2C%22width%22%3A193.80629000000002%2C%22height%22%3A22.247119999999995%2C%22text%22%3A%22APR%202021%20-APR%202022%22%7D%2C%7B%22x%22%3A113.653564%2C%22y%22%3A330.98083%2C%22width%22%3A27.88384599999999%2C%22height%22%3A13.458169999999996%2C%22text%22%3A%2270%25%22%7D%2C%7B%22x%22%3A114.44344%2C%22y%22%3A409.02673%2C%22width%22%3A28.194220000000016%2C%22height%22%3A13.19834000000003%2C%22text%22%3A%2256%25%22%7D%2C%7B%22x%22%3A114.70582%2C%22y%22%3A486.17133%2C%22width%22%3A27.864969999999985%2C%22height%22%3A14.668790000000001%2C%22text%22%3A%22425%22%7D%2C%7B%22x%22%3A619.4649%2C%22y%22%3A506.9649%2C%22width%22%3A330.9768%2C%22height%22%3A48.74604000000005%2C%22text%22%3A%22STATCOUNTER%22%7D%2C%7B%22x%22%3A113.13263%2C%22y%22%3A564.68744%2C%22width%22%3A30.340129999999988%2C%22height%22%3A12.67665999999997%2C%22text%22%3A%2220%25%22%7D%2C%7B%22x%22%3A114.336395%2C%22y%22%3A642.87494%2C%22width%22%3A28.164355000000015%2C%22height%22%3A11.94530999999995%2C%22text%22%3A%2214%E5%85%8B%22%7D%2C%7B%22x%22%3A120.55561%2C%22y%22%3A719.55786%2C%22width%22%3A23.27333999999999%2C%22height%22%3A12.785579999999982%2C%22text%22%3A%220%25%22%7D%2C%7B%22x%22%3A1224.5166%2C%22y%22%3A728.12146%2C%22width%22%3A38.75960000000009%2C%22height%22%3A56.737640000000056%2C%22text%22%3A%22PT%202022%22%7D%2C%7B%22x%22%3A1037.7268%2C%22y%22%3A729.5579%2C%22width%22%3A42.053499999999985%2C%22height%22%3A57.20314999999994%2C%22text%22%3A%22FET5%202022%22%7D%2C%7B%22x%22%3A207.67464%2C%22y%22%3A729.6897%2C%22width%22%3A39.691659999999985%2C%22height%22%3A56.57226000000003%2C%22text%22%3A%22MAY%202021%22%7D%2C%7B%22x%22%3A670.51263%2C%22y%22%3A729.9913%2C%22width%22%3A32.7036700000001%2C%22height%22%3A56.642600000000016%2C%22text%22%3A%220GR%20200*%22%7D%2C%7B%22x%22%3A298.2767%2C%22y%22%3A730.92487%2C%22width%22%3A40.44387999999998%2C%22height%22%3A61.550829999999905%2C%22text%22%3A%22LUNE%202021%22%7D%2C%7B%22x%22%3A1130.2701%2C%22y%22%3A731.3004%2C%22width%22%3A39.021600000000035%2C%22height%22%3A56.43299999999999%2C%22text%22%3A%22MAT2022%22%7D%2C%7B%22x%22%3A672.95953%2C%22y%22%3A800.9843%2C%22width%22%3A290.88593000000003%2C%22height%22%3A19.774%2C%22text%22%3A%22IGE%20O%20FIREFOX%20OPERE%20OPERE%20CTHER%20(DOMED)%22%7D%2C%7B%22x%22%3A645.0309%2C%22y%22%3A803.5263%2C%22width%22%3A37.73734999999999%2C%22height%22%3A16.882000000000062%2C%22text%22%3A%22EDGE%22%7D%2C%7B%22x%22%3A112.075264%2C%22y%22%3A858.1391%2C%22width%22%3A200.46016600000002%2C%22height%22%3A23.007749999999987%2C%22text%22%3A%22SAVE%20CHART%20IMAGE(.PNG)%22%7D%2C%7B%22x%22%3A342.62534%2C%22y%22%3A858.9727%2C%22width%22%3A317.20976%2C%22height%22%3A19.73255999999992%2C%22text%22%3A%22DOWNLOAD%20DATA%20(.CSV)%20EMBED%20HTML%22%7D%2C%7B%22x%22%3A696.2229%2C%22y%22%3A859.04663%2C%22width%22%3A581.4666%2C%22height%22%3A24.90996999999993%2C%22text%22%3A%22%3CDIVIDI'DESKTOP-BROWSER%20WWWMONTHLY-202104-202204%20VICTHICTH%20'600%20HEIG%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ueeab60dd%22%7D"></card></p><p data-lake-id="u592ef287" id="u592ef287"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2022%2Fpng%2F22931%2F1653445917999-17f75c32-164e-4216-9aa3-6f93b998ed94.png%22%2C%22taskId%22%3A%22ueb0f32ad-44cf-4f34-a681-ed9f3b37c01%22%2C%22clientId%22%3A%22u111593c0-ecdb-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A670%2C%22height%22%3A454%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A880430%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1340%2C%22originHeight%22%3A908%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22SAFARI%20UC%20BROWSER%20SAMSUNG%20INTERNET%20ANDROID%20QQ%20BROWSER%20CHROME%2017.74%25%2014.78%25%200.56%25%2055.88%25%208.41%25%201.05%25%20MOBILE%20BROWSER%20MARKET%20SHARE%20IN%20CHINA-APRIL%202022%20MOBILE%20BROWSER%20MARKET%20SHARE%20CHINA%20EDITCHART%20DATA%20APR%202021-APR%202022%20STATCOUNTER%2028%25%202022%20MAY%202021%20ORT%202021%20FET%202022%20%E8%AF%81%E5%8F%B7%20O%20SALAR%20O%20EROWSER%20O%20ANDROID%20O%20SAMSUTGUTG%20INTERRIES%20ET%20O%20PREFO%20O%20O%20OPERA%20E%20EDGE%20LEGACY%20LXC%20BROWSER%20CHROME%20)%20EMBED%20HTML%20%3CDIV%20ID%20MOBILE%20BROWSER-CN-MONTHLY-202104-20220%23%20WDTHA'%20HEIGH%20SAVE%20CHART%20IMAGE(-PNG)%20DOWNLOAD%20DATA(.CSV)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A475.63437%2C%22y%22%3A31.782652%2C%22width%22%3A41.33298000000002%2C%22height%22%3A15.845598000000003%2C%22text%22%3A%22SAFARI%22%7D%2C%7B%22x%22%3A270.23322%2C%22y%22%3A31.784117%2C%22width%22%3A84.75520999999998%2C%22height%22%3A18.528903000000003%2C%22text%22%3A%22UC%20BROWSER%22%7D%2C%7B%22x%22%3A887.21387%2C%22y%22%3A32.030563%2C%22width%22%3A126.98242999999991%2C%22height%22%3A18.092937%2C%22text%22%3A%22SAMSUNG%20INTERNET%22%7D%2C%7B%22x%22%3A1091.3269%2C%22y%22%3A32.39277%2C%22width%22%3A57.58230000000003%2C%22height%22%3A15.39443%2C%22text%22%3A%22ANDROID%22%7D%2C%7B%22x%22%3A680.89764%2C%22y%22%3A32.43862%2C%22width%22%3A88.03665999999998%2C%22height%22%3A16.723047%2C%22text%22%3A%22QQ%20BROWSER%22%7D%2C%7B%22x%22%3A66.492004%2C%22y%22%3A33.511276%2C%22width%22%3A56.29065600000001%2C%22height%22%3A13.595093999999996%2C%22text%22%3A%22CHROME%22%7D%2C%7B%22x%22%3A273.02637%2C%22y%22%3A58.654808%2C%22width%22%3A139.15609%2C%22height%22%3A39.847206%2C%22text%22%3A%2217.74%25%22%7D%2C%7B%22x%22%3A478.6257%2C%22y%22%3A59.579227%2C%22width%22%3A135.31216999999998%2C%22height%22%3A35.353053%2C%22text%22%3A%2214.78%25%22%7D%2C%7B%22x%22%3A1090.6893%2C%22y%22%3A60.208828%2C%22width%22%3A114.02350000000001%2C%22height%22%3A35.050662%2C%22text%22%3A%220.56%25%22%7D%2C%7B%22x%22%3A66.41726%2C%22y%22%3A59.08975%2C%22width%22%3A138.79383%2C%22height%22%3A38.148810000000005%2C%22text%22%3A%2255.88%25%22%7D%2C%7B%22x%22%3A681.36566%2C%22y%22%3A60.66601%2C%22width%22%3A114.58513999999991%2C%22height%22%3A34.49728%2C%22text%22%3A%228.41%25%22%7D%2C%7B%22x%22%3A889.86523%2C%22y%22%3A60.6963%2C%22width%22%3A110.57487000000003%2C%22height%22%3A35.04886%2C%22text%22%3A%221.05%25%22%7D%2C%7B%22x%22%3A457.64096%2C%22y%22%3A130.49403%2C%22width%22%3A397.29299999999995%2C%22height%22%3A21.372320000000002%2C%22text%22%3A%22MOBILE%20BROWSER%20MARKET%20SHARE%20IN%20CHINA-APRIL%202022%22%7D%2C%7B%22x%22%3A91.11348%2C%22y%22%3A237.99759%2C%22width%22%3A496.53702%2C%22height%22%3A34.75914999999998%2C%22text%22%3A%22MOBILE%20BROWSER%20MARKET%20SHARE%20CHINA%22%7D%2C%7B%22x%22%3A1109.7927%2C%22y%22%3A252.07762%2C%22width%22%3A116.20690000000013%2C%22height%22%3A16.99915999999999%2C%22text%22%3A%22EDITCHART%20DATA%22%7D%2C%7B%22x%22%3A90.58898%2C%22y%22%3A275.90417%2C%22width%22%3A190.5276%2C%22height%22%3A23.238729999999975%2C%22text%22%3A%22APR%202021-APR%202022%22%7D%2C%7B%22x%22%3A587.68384%2C%22y%22%3A489.40042%2C%22width%22%3A315.8446%2C%22height%22%3A46.44268000000005%2C%22text%22%3A%22STATCOUNTER%22%7D%2C%7B%22x%22%3A90.45864%2C%22y%22%3A546.87164%2C%22width%22%3A28.712959999999995%2C%22height%22%3A14.479130000000055%2C%22text%22%3A%2228%25%22%7D%2C%7B%22x%22%3A917.43115%2C%22y%22%3A705.20856%2C%22width%22%3A30.194150000000036%2C%22height%22%3A42.39063999999996%2C%22text%22%3A%222022%22%7D%2C%7B%22x%22%3A178.70782%2C%22y%22%3A705.5439%2C%22width%22%3A45.52373%2C%22height%22%3A62.468200000000024%2C%22text%22%3A%22MAY%202021%22%7D%2C%7B%22x%22%3A636.8629%2C%22y%22%3A707.87506%2C%22width%22%3A36.11340000000007%2C%22height%22%3A56.44234000000006%2C%22text%22%3A%22ORT%202021%22%7D%2C%7B%22x%22%3A997.8597%2C%22y%22%3A708.7051%2C%22width%22%3A38.4987000000001%2C%22height%22%3A56.121129999999994%2C%22text%22%3A%22FET%202022%22%7D%2C%7B%22x%22%3A458.34567%2C%22y%22%3A709.5878%2C%22width%22%3A34.45545000000004%2C%22height%22%3A59.80484000000001%2C%22text%22%3A%22%E8%AF%81%E5%8F%B7%22%7D%2C%7B%22x%22%3A398.58838%2C%22y%22%3A777.0847%2C%22width%22%3A385.93162%2C%22height%22%3A19.947649999999953%2C%22text%22%3A%22O%20SALAR%20O%20EROWSER%20O%20ANDROID%20O%20SAMSUTGUTG%20INTERRIES%22%7D%2C%7B%22x%22%3A774.82294%2C%22y%22%3A777.7834%2C%22width%22%3A388.9926599999999%2C%22height%22%3A22.45659999999998%2C%22text%22%3A%22ET%20O%20PREFO%20O%20O%20OPERA%20E%20EDGE%20LEGACY%22%7D%2C%7B%22x%22%3A304.09772%2C%22y%22%3A781.3487%2C%22width%22%3A74.23367999999999%2C%22height%22%3A16.139400000000023%2C%22text%22%3A%22LXC%20BROWSER%22%7D%2C%7B%22x%22%3A215.98259%2C%22y%22%3A781.6053%2C%22width%22%3A55.46034%2C%22height%22%3A14.984199999999987%2C%22text%22%3A%22CHROME%22%7D%2C%7B%22x%22%3A477.0705%2C%22y%22%3A834.41473%2C%22width%22%3A149.71949999999998%2C%22height%22%3A21.279610000000048%2C%22text%22%3A%22)%20EMBED%20HTML%22%7D%2C%7B%22x%22%3A661.67725%2C%22y%22%3A834.48816%2C%22width%22%3A569.1783500000001%2C%22height%22%3A27.324039999999968%2C%22text%22%3A%22%3CDIV%20ID%20MOBILE%20BROWSER-CN-MONTHLY-202104-20220%23%20WDTHA'%20HEIGH%22%7D%2C%7B%22x%22%3A89.96217%2C%22y%22%3A836.3129%2C%22width%22%3A197.25462999999996%2C%22height%22%3A20.150359999999978%2C%22text%22%3A%22SAVE%20CHART%20IMAGE(-PNG)%22%7D%2C%7B%22x%22%3A315.58145%2C%22y%22%3A836.21246%2C%22width%22%3A183.62368999999995%2C%22height%22%3A19.028740000000084%2C%22text%22%3A%22DOWNLOAD%20DATA(.CSV)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ucae65c05%22%7D"></card></p><p data-lake-id="u109fe36a" id="u109fe36a"><br></p><p data-lake-id="u13076923" id="u13076923"><br></p><h3 data-lake-id="76bab7c4" id="76bab7c4"><span data-lake-id="ucc3bf383" id="ucc3bf383">2. Dart特性和重要概念</span></h3><p data-lake-id="u12951f82" id="u12951f82"><br></p><p data-lake-id="u8c96e3d1" id="u8c96e3d1"><span data-lake-id="u3fe24f93" id="u3fe24f93">Dart的特性主要有以下几点：</span></p><p data-lake-id="ua652aa59" id="ua652aa59"><br></p><ol list="u0d980c47"><li fid="u860b34b7" data-lake-id="uba41f4fc" id="uba41f4fc"><span data-lake-id="u50c251a2" id="u50c251a2">执行速度快，Dart是AOT(Ahead Of Time)编译的，可以编译成快速的、可预测的本地代码，这使得Flutter几乎都可以使用Dart来编写。也可以采用JIT（Just In Time）编译，</span><strong><span data-lake-id="u09a412ef" id="u09a412ef">用来支持热重载</span></strong><span data-lake-id="u6ffe2d91" id="u6ffe2d91">。</span></li><li fid="u860b34b7" data-lake-id="u3e9ff72a" id="u3e9ff72a"><span data-lake-id="udf6acbd6" id="udf6acbd6">易于移植，Dart可编译成ARM和X86代码，这样Dart可以在Android、iOS和其他地方运行。</span></li><li fid="u860b34b7" data-lake-id="u9b0bfb5a" id="u9b0bfb5a"><span data-lake-id="u86f16165" id="u86f16165">容易上手，Dart充分吸收了高级语言特性，如果你已经熟悉C++、C、Java，可以在短短几天内用Dart来开发。</span></li><li fid="u860b34b7" data-lake-id="uc2d352a8" id="uc2d352a8"><span data-lake-id="u1d704741" id="u1d704741">易于阅读，Dart使Flutter不需要单独的声明式布局语言（XML或JSX），或者单独的可视化界面构建器，这是因为Dart的声明式编程布局易于阅读。</span></li><li fid="u860b34b7" data-lake-id="u381c9c64" id="u381c9c64"><span data-lake-id="u810d0c56" id="u810d0c56">避免抢占式调度，Dart可以在没有锁的情况下进行对象分配和垃圾回收，和JavaScript一样，Dart避免了抢占式调度和共享内存，因此不需要锁。</span></li></ol><p data-lake-id="u8d26047e" id="u8d26047e"><br></p><p data-lake-id="u3342eec0" id="u3342eec0"><span data-lake-id="ub955edc9" id="ub955edc9">Dart的重要概念有以下几点：</span></p><p data-lake-id="uf5619fb3" id="uf5619fb3"><br></p><ol list="ub10a566d"><li fid="u312983be" data-lake-id="u4f8a71d3" id="u4f8a71d3"><span data-lake-id="u827a9e94" id="u827a9e94">在Dart中，一切都是对象，每个对象都是一个类的实例，所有对象都继承自Object。</span></li><li fid="u312983be" data-lake-id="u9cfdc3d8" id="u9cfdc3d8"><span data-lake-id="uc1a59678" id="uc1a59678">Dart在运行前解析所有的代码，指定数据类型和编译时常量，可以使代码运行地更快。</span></li><li fid="u312983be" data-lake-id="u1f19b12d" id="u1f19b12d"><span data-lake-id="u0768da25" id="u0768da25">与Java不同，Dart不具备关键字public、protected、private。如果一个标识符以下划线_开始，那么它和它的库都是私有的。</span></li><li fid="u312983be" data-lake-id="u97939feb" id="u97939feb"><span data-lake-id="u2f4a81be" id="u2f4a81be">Dart支持顶级的函数如main()，也支持类或对象的静态和实例方法，还可以在函数内部创建函数。</span></li><li fid="u312983be" data-lake-id="ua3a9f19d" id="ua3a9f19d"><span data-lake-id="uf73b3fc2" id="uf73b3fc2">Dart支持顶级的变量，也支持类或对象的静态变量和实例变量，实例变量有时称为字段或属性。</span></li><li fid="u312983be" data-lake-id="u579738c9" id="u579738c9"><span data-lake-id="uc5c54ab1" id="uc5c54ab1">Dart支持泛型类型，如List（整数列表）或List（任何类型的对象列表）。</span></li><li fid="u312983be" data-lake-id="u1d148c87" id="u1d148c87"><span data-lake-id="u03fa54e0" id="u03fa54e0">Dart工具可以报告两种问题：警告和错误。警告只是说明代码可能无法正常工作，但不会阻止程序执行。错误可以是编译时或运行时的。编译时错误会阻止代码执行; 运行时错误会导致代码执行时报出异常。</span></li></ol><p data-lake-id="u25a902ff" id="u25a902ff"><br></p><h3 data-lake-id="22e6947d" id="22e6947d"><span data-lake-id="u8b16c054" id="u8b16c054">3. Dart开发环境搭建</span></h3><p data-lake-id="u50a0e897" id="u50a0e897"><br></p><p data-lake-id="ua438cefd" id="ua438cefd"><span data-lake-id="uc642e68e" id="uc642e68e">学习Dart语法最好需要用一个编辑器来实践，这里推荐使用IntelliJ IDEA。</span></p><p data-lake-id="uca6e183e" id="uca6e183e"><br></p><ol list="uc2869487"><li fid="ua08b493a" data-lake-id="u35fe41c5" id="u35fe41c5"><span data-lake-id="ua561be12" id="ua561be12">下载安装Dart SDK，推荐采用命令行直接安装（也可以采用zip包的）：</span></li></ol><p data-lake-id="u7f0845db" id="u7f0845db"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%20brew%20tap%20dart-lang%2Fdart%5Cn%20brew%20install%20dart%5Cn%20brew%20upgrade%20dart%20%2F%2F%E5%8D%87%E7%BA%A7%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22e2daae7f%22%7D"></card><p data-lake-id="uc600b137" id="uc600b137"><br></p><ol list="uaaff3b50" start="2"><li fid="uf02ac376" data-lake-id="u66885d1a" id="u66885d1a"><span data-lake-id="u219bcef2" id="u219bcef2">在IntelliJ IDEA里安装Dart插件， 打开IntelliJ IDEA，菜单中点击File--&gt;Settings--&gt;plugins，在plugins的搜索框中搜索Dart并安装，然后重启IntelliJ IDEA。</span></li><li fid="uf02ac376" data-lake-id="u2d170765" id="u2d170765"><span data-lake-id="u7719f2e8" id="u7719f2e8">配置sdk路径，File--&gt;Settings，在dart插件插件中按照下图配置Dart SDK。</span></li></ol><p data-lake-id="uc0ea224d" id="uc0ea224d"><br></p><p data-lake-id="uab1a4895" id="uab1a4895"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653113604118-d245f835-8d6f-4e5a-a5d0-b68cc8289943.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D326%26id%3Duecf81b92%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D652%26originWidth%3D1610%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D93253%26status%3Ddone%26style%3Dnone%26taskId%3Duf8d52498-08dd-4497-83ae-9a8a81c4d83%26title%3D%26width%3D805%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1610%2C%22originHeight%22%3A652%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22fnC0W%22%7D"></card></p><p data-lake-id="u5b9a7738" id="u5b9a7738"><br></p><ol list="uf30659b4" start="4"><li fid="ub2e1eb3a" data-lake-id="u13abb3fb" id="u13abb3fb"><span data-lake-id="uff56bb73" id="uff56bb73">HelloWorld项目，File--&gt;New Project--&gt;Dart，选择控制台应用，一路Next；</span></li></ol><p data-lake-id="uabfd4380" id="uabfd4380"><br></p><p data-lake-id="ue6ac61a7" id="ue6ac61a7"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653113840936-e80be80d-1e83-4c36-a4d7-ce6bee7aab4d.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D345%26id%3Du8c5e0377%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D690%26originWidth%3D1454%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D145311%26status%3Ddone%26style%3Dnone%26taskId%3Dufd5d43b1-c0b4-4231-bec9-822bc934ea9%26title%3D%26width%3D727%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1454%2C%22originHeight%22%3A690%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22jUV9T%22%7D"></card></p><p data-lake-id="ub56769c4" id="ub56769c4"><br></p><p data-lake-id="u50577492" id="u50577492"><span data-lake-id="uba0744de" id="uba0744de">在项目中的bin/main.dart中加入如下测试代码,点击菜单的Run--&gt;Run'main.dart'</span></p><p data-lake-id="u4ac05e31" id="u4ac05e31"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22void%20main()%20%7B%5Cn%20%20print(%5C%22Hello%20World%5C%22)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%220a770eb1%22%7D"></card><p data-lake-id="uc95f8eb1" id="uc95f8eb1"><br></p><p data-lake-id="uce341cdb" id="uce341cdb"><span data-lake-id="u21e66878" id="u21e66878">遇到的问题：记得取消CheckedMode勾选，否则运行报错；<br /></span><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653114397746-3468ede7-3939-4cc9-b855-f87bf20e9de6.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D298%26id%3Du678ba5b6%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D596%26originWidth%3D1490%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D71350%26status%3Ddone%26style%3Dnone%26taskId%3Du963f99b2-6d56-46d6-98e6-7d52d5baf79%26title%3D%26width%3D745%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1490%2C%22originHeight%22%3A596%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22JE24d%22%7D"></card></p><p data-lake-id="ue890a98f" id="ue890a98f"><br></p><h3 data-lake-id="9bf2fa34" id="9bf2fa34"><span data-lake-id="ua40d42a7" id="ua40d42a7">4. Dart关键字</span></h3><p data-lake-id="uc307c750" id="uc307c750"><br></p><p data-lake-id="u9eb460f8" id="u9eb460f8"><span data-lake-id="u10d1ff8e" id="u10d1ff8e">Dart语言关键字列表：<br /></span><a href="https://www.dartcn.com/guides/language/language-tour" target="_blank" data-lake-id="u0dc8d508" id="u0dc8d508"><span data-lake-id="u413de25d" id="u413de25d">https://www.dartcn.com/guides/language/language-tour</span></a><span data-lake-id="uea3fdc56" id="uea3fdc56"><br /></span><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653115740772-18f0af5b-4275-4aee-a81e-d41af3e8511c.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D573%26id%3Du9d5a0c81%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D1146%26originWidth%3D1946%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D152599%26status%3Ddone%26style%3Dnone%26taskId%3Dubdc872d8-3d8d-4bd1-bd3d-48debf38ad7%26title%3D%26width%3D973%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1946%2C%22originHeight%22%3A1146%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22x6pRo%22%7D"></card></p><p data-lake-id="u41342733" id="u41342733"><br></p><ul list="u73309142"><li fid="ud5cbf2ae" data-lake-id="u75bceb2a" id="u75bceb2a"><span data-lake-id="u1811f9c8" id="u1811f9c8">其中有些关键字是dart独有的，如</span><a href="https://www.dartcn.com/guides/language/language-tour#%E5%AF%BC%E5%85%A5%E5%BA%93%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86" target="_blank" data-lake-id="u9dd4b27c" id="u9dd4b27c"><span data-lake-id="ue4b8494d" id="ue4b8494d">show</span></a><span data-lake-id="u31f8834b" id="u31f8834b">，</span><a href="https://www.dartcn.com/guides/language/language-tour#%E5%AF%BC%E5%85%A5%E5%BA%93%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86" target="_blank" data-lake-id="u71e6341b" id="u71e6341b"><span data-lake-id="u0ce86f00" id="u0ce86f00">hide</span></a><span data-lake-id="u50ab874d" id="u50ab874d"> ；</span></li><li fid="ud5cbf2ae" data-lake-id="u7dbbc11e" id="u7dbbc11e"><a href="https://www.dartcn.com/guides/language/language-tour#%E4%B8%BA%E7%B1%BB%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BDmixins" target="_blank" data-lake-id="ua75b9956" id="ua75b9956"><span data-lake-id="u0f04e531" id="u0f04e531">mixin</span></a><span data-lake-id="ua3f0f4cc" id="ua3f0f4cc"> ，参考：</span><a href="https://www.dartcn.com/guides/language/language-tour#%E4%B8%BA%E7%B1%BB%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BDmixins" target="_blank" data-lake-id="u611e7455" id="u611e7455"><span data-lake-id="ua4eb67f2" id="ua4eb67f2">https://www.dartcn.com/guides/language/language-tour#%E4%B8%BA%E7%B1%BB%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BDmixins</span></a></li><li fid="ud5cbf2ae" data-lake-id="u3648c330" id="u3648c330"><span data-lake-id="u7457bf70" id="u7457bf70">值得注意的是，可以采用</span><a href="https://www.dartcn.com/guides/language/language-tour#%E9%87%8D%E5%86%99%E8%BF%90%E7%AE%97%E7%AC%A6" target="_blank" data-lake-id="u3cd3b002" id="u3cd3b002"><span data-lake-id="u5fe0cc65" id="u5fe0cc65">operator</span></a><span data-lake-id="uee3af789" id="uee3af789">关键字重载运算符；</span></li></ul><p data-lake-id="u808192d4" id="u808192d4"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22class%20Vector%20%7B%5Cn%20%20final%20int%20x%2C%20y%3B%5Cn%5Cn%20%20Vector(this.x%2C%20this.y)%3B%5Cn%5Cn%20%20Vector%20operator%20%2B(Vector%20v)%20%3D%3E%20Vector(x%20%2B%20v.x%2C%20y%20%2B%20v.y)%3B%5Cn%20%20Vector%20operator%20-(Vector%20v)%20%3D%3E%20Vector(x%20-%20v.x%2C%20y%20-%20v.y)%3B%5Cn%5Cn%20%20%2F%2F%20%E8%BF%90%E7%AE%97%E7%AC%A6%20%3D%3D%20%E5%92%8C%20hashCode%20%E9%83%A8%E5%88%86%E6%B2%A1%E6%9C%89%E5%88%97%E5%87%BA%E3%80%82%20%E6%9C%89%E5%85%B3%E8%AF%A6%E6%83%85%EF%BC%8C%E8%AF%B7%E5%8F%82%E8%80%83%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%B3%A8%E9%87%8A%E3%80%82%5Cn%20%20%2F%2F%20%C2%B7%C2%B7%C2%B7%5Cn%7D%5Cn%5Cnvoid%20main()%20%7B%5Cn%20%20final%20v%20%3D%20Vector(2%2C%203)%3B%5Cn%20%20final%20w%20%3D%20Vector(2%2C%202)%3B%5Cn%5Cn%20%20assert(v%20%2B%20w%20%3D%3D%20Vector(4%2C%205))%3B%5Cn%20%20assert(v%20-%20w%20%3D%3D%20Vector(0%2C%201))%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2290c4d990%22%7D"></card><p data-lake-id="u9c5297b1" id="u9c5297b1"><br></p><blockquote data-lake-id="u0097e196" id="u0097e196"><p data-lake-id="u0b62c4fd" id="u0b62c4fd"><span data-lake-id="u97d2efdb" id="u97d2efdb">tips:assert默认关闭，需要在运行时携带启用assert参数： --enable-asserts<br /></span><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653147821700-b5c9de6c-10df-4c20-916f-11ab9523ad8d.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D26%26id%3Du862c6aa7%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D52%26originWidth%3D858%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D7388%26status%3Ddone%26style%3Dnone%26taskId%3Du24b1b894-445b-4bec-b535-28bdf68180d%26title%3D%26width%3D429%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A858%2C%22originHeight%22%3A52%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22tSQfL%22%7D"></card></p></blockquote><p data-lake-id="ubab66cd4" id="ubab66cd4"><br></p><p data-lake-id="u5e9c4064" id="u5e9c4064"><br></p><p data-lake-id="u2e0f72c3" id="u2e0f72c3"><br></p><h3 data-lake-id="d92e8182" id="d92e8182"><span data-lake-id="ud69c5cec" id="ud69c5cec">5. 基本数据类型</span></h3><p data-lake-id="u04e38b8d" id="u04e38b8d"><br></p><p data-lake-id="u1712e772" id="u1712e772"><span data-lake-id="ua1a6f320" id="ua1a6f320">Dart的基本数据类型包括Number、String、Boolean、List、Set、Map、 Symbol、Runes。</span></p><p data-lake-id="u4802879c" id="u4802879c"><br></p><h4 data-lake-id="6e8a9762" id="6e8a9762"><span data-lake-id="u3ff70ddf" id="u3ff70ddf">5.1 Number</span></h4><p data-lake-id="u46272343" id="u46272343"><br></p><p data-lake-id="u6316140e" id="u6316140e"><span data-lake-id="u8467a472" id="u8467a472">number类型为两类：</span></p><p data-lake-id="u175fc97b" id="u175fc97b"><br></p><ul list="u1cc06a14"><li fid="u2a6e27a7" data-lake-id="ua0f1e551" id="ua0f1e551"><span data-lake-id="u769f7360" id="u769f7360">int：整数值不大于64位，具体取决于平台。在Dart VM上，值可以是-2 ^63到2 ^63 - 1，如果编译为JavaScript，允许值为-2^53 to 2^53 - 1。</span></li><li fid="u2a6e27a7" data-lake-id="u9ba9c67d" id="u9ba9c67d"><span data-lake-id="u2fcd9922" id="u2fcd9922">double：64-bit (双精度) 浮点数，符合 IEEE 754 标准。</span></li><li fid="u2a6e27a7" data-lake-id="uf88e2d76" id="uf88e2d76"><span data-lake-id="u22a428ab" id="u22a428ab">int 和 double 都是 </span><a href="https://api.dartlang.org/stable/dart-core/num-class.html" target="_blank" data-lake-id="u07b3c0a1" id="u07b3c0a1"><span data-lake-id="u422b2c15" id="u422b2c15">num.</span></a><span data-lake-id="udd21c03c" id="udd21c03c"> 的亚类型。 num 类型包括基本运算 +， -， /， 和 *， 以及 abs()， ceil()， 和 floor()， 等函数方法。 （按位运算符，例如»，定义在 int 类中。） 如果 num 及其亚类型找不到你想要的方法， 尝试查找使用 </span><a href="https://api.dartlang.org/stable/dart-math" target="_blank" data-lake-id="uf5e153bf" id="uf5e153bf"><span data-lake-id="u1f392f06" id="u1f392f06">dart:math</span></a><span data-lake-id="u177b35e5" id="u177b35e5"> 库。</span></li></ul><p data-lake-id="u4051ed37" id="u4051ed37"><br></p><p data-lake-id="u0c341213" id="u0c341213"><span data-lake-id="u40f2c833" id="u40f2c833">以下是将字符串转换为数字的方法，反之亦然：</span></p><p data-lake-id="ud62bfb1f" id="ud62bfb1f"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%2F%2F%20String%20-%3E%20int%5Cnvar%20one%20%3D%20int.parse('1')%3B%5Cnassert(one%20%3D%3D%201)%3B%5Cn%5Cn%2F%2F%20String%20-%3E%20double%5Cnvar%20onePointOne%20%3D%20double.parse('1.1')%3B%5Cnassert(onePointOne%20%3D%3D%201.1)%3B%5Cn%5Cn%2F%2F%20int%20-%3E%20String%5CnString%20oneAsString%20%3D%201.toString()%3B%5Cnassert(oneAsString%20%3D%3D%20'1')%3B%5Cn%5Cn%2F%2F%20double%20-%3E%20String%5CnString%20piAsString%20%3D%203.14159.toStringAsFixed(2)%3B%5Cnassert(piAsString%20%3D%3D%20'3.14')%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2247bfda5a%22%7D"></card><p data-lake-id="ud6af40f4" id="ud6af40f4"><br></p><p data-lake-id="u0c5aa83f" id="u0c5aa83f"><br></p><p data-lake-id="u58d769fc" id="u58d769fc"><br></p><h4 data-lake-id="48d2041c" id="48d2041c"><span data-lake-id="ub62819a8" id="ub62819a8">5.2 String</span></h4><p data-lake-id="u46f5954a" id="u46f5954a"><br></p><p data-lake-id="uc7a34883" id="uc7a34883"><span data-lake-id="u5581919d" id="u5581919d">Dart 字符串是 UTF-16 编码的字符序列。可以使用单引号或者双引号来创建字符串：</span></p><p data-lake-id="u0d9df412" id="u0d9df412"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20s1%20%3D%20'%E5%8D%95%E5%BC%95%E5%8F%B7%E9%80%82%E7%94%A8%E4%BA%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%87%E5%AD%97'%3B%5Cnvar%20s2%20%3D%20%5C%22%E5%8F%8C%E5%BC%95%E5%8F%B7%E5%90%8C%E6%A0%B7%E6%9C%89%E6%95%88%5C%22%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2224448956%22%7D"></card><p data-lake-id="u5dc04568" id="u5dc04568"><br></p><p data-lake-id="u35eaaea9" id="u35eaaea9"><span data-lake-id="u91c50627" id="u91c50627">可以在字符串中使用表达式，用法是：${expression}。如果表达式是一个标识符，可以省略 {}。</span></p><p data-lake-id="uee2d7248" id="uee2d7248"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20s%20%3D%20'%E4%B9%BE%E5%9D%A4%E5%A4%A7%E6%8C%AA%E7%A7%BB'%3B%5Cnassert('%E5%BC%A0%E6%97%A0%E5%BF%8C%E7%9A%84%24s'%20%3D%3D%20'%E5%BC%A0%E6%97%A0%E5%BF%8C%E7%9A%84%E4%B9%BE%E5%9D%A4%E5%A4%A7%E6%8C%AA%E7%A7%BB')%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%223bb34806%22%7D"></card><p data-lake-id="uc95bbb1d" id="uc95bbb1d"><br></p><p data-lake-id="ua55c0d52" id="ua55c0d52"><span data-lake-id="u3d1cca9d" id="u3d1cca9d">使用三个单引号或者三个双引号可以创建多行字符串对象：</span></p><p data-lake-id="ub0a01f01" id="ub0a01f01"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20s1%20%3D%20'''%5Cn%E7%AC%AC%E4%B8%80%E8%A1%8C%5Cn%E7%AC%AC%E4%BA%8C%E8%A1%8C%5Cn'''%3B%5Cn%5Cnvar%20s2%20%3D%20%5C%22%5C%22%5C%22%E7%AC%AC%E4%B8%80%E8%A1%8C%5Cn%E7%AC%AC%E4%BA%8C%E8%A1%8C%5C%22%5C%22%5C%22%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22af7b63ed%22%7D"></card><p data-lake-id="uce810947" id="uce810947"><br></p><p data-lake-id="u5afbdcea" id="u5afbdcea"><br></p><p data-lake-id="uc1027ede" id="uc1027ede"><br></p><h4 data-lake-id="cb75de14" id="cb75de14"><span data-lake-id="u735268d2" id="u735268d2">5.3 Boolean</span></h4><p data-lake-id="u94bccd56" id="u94bccd56"><br></p><p data-lake-id="ub53ac905" id="ub53ac905"><span data-lake-id="u7a9d4407" id="u7a9d4407">Dart是强bool类型检查，只有true对象才被认为是true。</span></p><p data-lake-id="uebbe215b" id="uebbe215b"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20name%20%3D%20'%E5%BC%A0%E6%97%A0%E5%BF%8C'%3B%5Cnif%20(name)%20%7B%5Cn%20%20print('%E6%98%8E%E6%95%99%E6%95%99%E4%B8%BB')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22ddb7c0b4%22%7D"></card><p data-lake-id="u724b34de" id="u724b34de"><br></p><p data-lake-id="u6c0c2bb0" id="u6c0c2bb0"><span data-lake-id="u8ed3442d" id="u8ed3442d">上面的代码编译不能通过，因为name是一个字符串，而不是bool类型。</span></p><p data-lake-id="u331e2105" id="u331e2105"><br></p><h4 data-lake-id="555918dd" id="555918dd"><span data-lake-id="u50328e65" id="u50328e65">5.4 </span><a href="https://www.dartcn.com/guides/language/language-tour#list" target="_blank" data-lake-id="u2dabbf55" id="u2dabbf55"><span data-lake-id="u38dbc88a" id="u38dbc88a">List</span></a></h4><p data-lake-id="u58c09190" id="u58c09190"><br></p><p data-lake-id="uc108c006" id="uc108c006"><span data-lake-id="u16dcfa31" id="u16dcfa31">下面是一个List 的示例(同JS的数组):</span></p><p data-lake-id="u8f47e456" id="u8f47e456"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20list%20%3D%20%5B1%2C%202%2C%203%5D%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22ce1aa5ff%22%7D"></card><p data-lake-id="u4abf3bab" id="u4abf3bab"><br></p><p data-lake-id="ub140e053" id="ub140e053"><span data-lake-id="u9b5dd081" id="u9b5dd081">List的第一个元素的索引是0，最后一个元素的索引是 list.length - 1 。</span></p><p data-lake-id="ua522a89f" id="ua522a89f"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20list%20%3D%20%5B1%2C%202%2C%203%2C%204%2C%205%2C%206%5D%3B%5Cnprint(list.length)%3B%5Cnprint(list%5Blist.length-1%5D)%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%228b21a897%22%7D"></card><p data-lake-id="uc021c3e6" id="uc021c3e6"><br></p><p data-lake-id="ucd538ae9" id="ucd538ae9"><br></p><p data-lake-id="ucb136a80" id="ucb136a80"><br></p><h4 data-lake-id="4a594cff" id="4a594cff"><span data-lake-id="u2bb6bd6c" id="u2bb6bd6c">5.5 Set</span></h4><p data-lake-id="u54cdfa81" id="u54cdfa81"><br></p><p data-lake-id="u7a6aef6d" id="u7a6aef6d"><span data-lake-id="u7f8d92a6" id="u7f8d92a6">Dart中的Set是一组无序的集合。</span></p><p data-lake-id="u8505d639" id="u8505d639"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20hero%20%3D%20%7B'%E5%BC%A0%E6%97%A0%E5%BF%8C'%2C%20'%E9%A3%8E%E6%B8%85%E6%89%AC'%2C%20'%E5%BC%A0%E4%B8%89%E4%B8%B0'%2C%20'%E7%8B%AC%E5%AD%A4%E6%B1%82%E8%B4%A5'%2C%20'%E8%90%A7%E5%B3%B0'%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22888823e2%22%7D"></card><p data-lake-id="u3a98efcf" id="u3a98efcf"><br></p><p data-lake-id="u406f1c6d" id="u406f1c6d"><span data-lake-id="ub94b1339" id="ub94b1339">要创建一个空集，可以在{}前面带有类型参数：</span></p><p data-lake-id="u78300ee5" id="u78300ee5"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20heros%3D%20%3CString%3E%20%7B%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%225f04255d%22%7D"></card><p data-lake-id="u93576067" id="u93576067"><br></p><p data-lake-id="uf4ea5223" id="uf4ea5223"><span data-lake-id="ubc8fdd0a" id="ubc8fdd0a">使用add()或addAll()方法将条目添加到现有集中：</span></p><p data-lake-id="ud0ed3d23" id="ud0ed3d23"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20halogens%20%3D%20%7B'fluorine'%2C%20'chlorine'%2C%20'bromine'%2C%20'iodine'%2C%20'astatine'%7D%3B%5Cnvar%20elements%20%3D%20%3CString%3E%7B%7D%3B%5Cnelements.add('fluorine')%3B%5Cnelements.addAll(halogens)%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%228027af9b%22%7D"></card><p data-lake-id="uea1fc16e" id="uea1fc16e"><br></p><p data-lake-id="u02bfb1d6" id="u02bfb1d6"><br></p><p data-lake-id="uc1c8c447" id="uc1c8c447"><br></p><h4 data-lake-id="4214e5e6" id="4214e5e6"><span data-lake-id="u2524df62" id="u2524df62"><br /></span><span data-lake-id="u8d54c14c" id="u8d54c14c">5.6 Map</span></h4><p data-lake-id="uad0811f8" id="uad0811f8"><br></p><p data-lake-id="u75c67879" id="u75c67879"><span data-lake-id="uda09ddb7" id="uda09ddb7">Map是一个键值对相关的对象，键和值可以是任何类型的对象，每个键都是唯一的，而一个值则可以出现多次。</span></p><p data-lake-id="uf38c1dab" id="uf38c1dab"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20player%3D%20%7B%5Cn%2F%2F%20Keys%20%20%20%20%20%20Values%5Cn%20%20'20'%20%3A%20'%E6%96%AF%E8%AF%BA'%2C%5Cn%20%20'3'%3A%20'%E8%89%BE%E5%BC%97%E6%A3%AE'%2C%5Cn%20%20'40'%20%3A%20'%E5%B8%8C%E5%B0%94'%2C%5Cn%20%20'8'%20%3A%20'%E9%BA%A6%E5%9F%BA'%2C%5Cn%20%20'55'%20%3A%20'%E7%A9%86%E6%89%98%E5%A7%86%E5%8D%9A'%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%228a9a8ad7%22%7D"></card><p data-lake-id="ua23fef83" id="ua23fef83"><br></p><p data-lake-id="u47c958b0" id="u47c958b0"><span data-lake-id="ud9821cda" id="ud9821cda">使用Map构造函数也可以实现同样的功能：</span></p><p data-lake-id="u59fab3a0" id="u59fab3a0"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%20%20var%20player%20%3D%20new%20Map()%3B%5Cn%20%20player%5B'20'%5D%20%3D%20'%E6%96%AF%E8%AF%BA'%3B%5Cn%20%20player%5B'3'%5D%20%3D%20'%E8%89%BE%E5%BC%97%E6%A3%AE'%3B%5Cn%20%20player%5B'40'%5D%20%3D%20'%E5%B8%8C%E5%B0%94'%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%227b4a8399%22%7D"></card><p data-lake-id="uc523152c" id="uc523152c"><br></p><p data-lake-id="ua8d85d56" id="ua8d85d56"><br></p><p data-lake-id="uc96fba09" id="uc96fba09"><br></p><h3 data-lake-id="c10d0178" id="c10d0178"><span data-lake-id="udf9329ae" id="udf9329ae">6. 变量</span></h3><p data-lake-id="u77bc9b60" id="u77bc9b60"><br></p><p data-lake-id="ubbe820b7" id="ubbe820b7"><span data-lake-id="u97546618" id="u97546618">变量声明使用var关键字，未初始化的变量的初始值为null，即便是数字类型的变量也是null。</span></p><p data-lake-id="u8a522de2" id="u8a522de2"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20name%20%3D%20'liuwangshu'%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2285cf75ab%22%7D"></card><p data-lake-id="u72304b8c" id="u72304b8c"><br></p><p data-lake-id="u6c9442fc" id="u6c9442fc"><span data-lake-id="u4e145522" id="u4e145522">name变量的类型被推断为String，也可以显示声明：</span></p><p data-lake-id="u8f883445" id="u8f883445"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22String%20name%20%3D%20'liuwangshu'%20%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22c92bed99%22%7D"></card><p data-lake-id="uf53ce5d6" id="uf53ce5d6"><br></p><p data-lake-id="uc574acdb" id="uc574acdb"><span data-lake-id="u9a2d1fdc" id="u9a2d1fdc">如果对象不限于单一类型，可以指定Object或dynamic类型。</span></p><p data-lake-id="uabea8206" id="uabea8206"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22Object%20name%20%3D%20'liuwangshu'%20%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22357b1605%22%7D"></card><p data-lake-id="u08f8f37b" id="u08f8f37b"><br></p><p data-lake-id="u4c243355" id="u4c243355"><span data-lake-id="u6fd96ae3" id="u6fd96ae3">如果定义的变量不会变化，可以使用final或const来代替var，final变量只能设置一次。</span></p><p data-lake-id="u0f7b252e" id="u0f7b252e"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22final%20name%20%3D%20'liuwangshu'%5Cn%2F%2Fname%20%3D%20'zhangwuji'%20%3B%20%2F%2F%E4%BC%9A%E6%8A%A5%E9%94%99%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22aed6ad0c%22%7D"></card><p data-lake-id="ufbceb682" id="ufbceb682"><br></p><p data-lake-id="uc6c84bcc" id="uc6c84bcc"><span data-lake-id="u81b15511" id="u81b15511">const变量为编译时常量，如果const变量在类级别，可以使用static const。</span></p><p data-lake-id="u22007ba4" id="u22007ba4"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22const%20pi%20%3D%203.1415926%3B%20%20%20%20%20%20%20%5Cnconst%20area%20%3D%20pi%20*%2060%20*%2060%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22a0460241%22%7D"></card><p data-lake-id="u4e0fa0d2" id="u4e0fa0d2"><br></p><p data-lake-id="u1c0264d3" id="u1c0264d3"><span data-lake-id="ud23ac052" id="ud23ac052">const不仅仅用来定义常量，也可以使用const来创建常量的值。</span></p><p data-lake-id="uf2b0ca7a" id="uf2b0ca7a"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20foo%20%3D%20const%20%5B%5D%3B%20%5Cnfinal%20bar%20%3D%20const%20%5B%5D%3B%20%5Cnconst%20baz%20%3D%20%5B%5D%3B%2F%2F%E7%9B%B8%E5%BD%93%E4%BA%8E%60const%20%5B%5D%60%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2206da63b1%22%7D"></card><p data-lake-id="u906fc693" id="u906fc693"><br></p><p data-lake-id="u3a4a897f" id="u3a4a897f"><br></p><p data-lake-id="u10901b68" id="u10901b68"><br></p><h3 data-lake-id="65c99eec" id="65c99eec"><span data-lake-id="ub9c32838" id="ub9c32838">7. 函数</span></h3><p data-lake-id="ub9f177e6" id="ub9f177e6"><br></p><p data-lake-id="u5a5883ec" id="u5a5883ec"><span data-lake-id="u253e4c88" id="u253e4c88">Dart 是一门真正面向对象的语言， 甚至其中的函数也是对象，并且有它的类型 </span><a href="https://api.dartlang.org/stable/dart-core/Function-class.html" target="_blank" data-lake-id="u38901c79" id="u38901c79"><span data-lake-id="u97255634" id="u97255634">Function</span></a><span data-lake-id="uef7a82ec" id="uef7a82ec"> 。 这也意味着函数可以被赋值给变量或者作为参数传递给其他函数。 也可以把 Dart 类的实例当做方法来调用。 有关更多信息，参考 </span><a href="https://www.dartcn.com/guides/language/language-tour#callable-classes" target="_blank" data-lake-id="uf6023f99" id="uf6023f99"><span data-lake-id="uf98bac8b" id="uf98bac8b">Callable classes</span></a><span data-lake-id="u62f82885" id="u62f82885">.</span></p><p data-lake-id="u54698edf" id="u54698edf"><br></p><h4 data-lake-id="544e3410" id="544e3410"><span data-lake-id="u36bed379" id="u36bed379">7.1 箭头函数</span></h4><p data-lake-id="u4da82f0a" id="u4da82f0a"><br></p><p data-lake-id="ud54f3072" id="ud54f3072"><span data-lake-id="uaca97ee6" id="uaca97ee6">=&gt; </span><em><span data-lake-id="uf62d43b8" id="uf62d43b8">expr</span></em><span data-lake-id="ucf71c174" id="ucf71c174"> 语法是 { return </span><em><span data-lake-id="u145023d2" id="u145023d2">expr</span></em><span data-lake-id="u1209bfba" id="u1209bfba">; } 的简写。 =&gt; 符号 有时也被称为 </span><em><span data-lake-id="ub7e3a9b6" id="ub7e3a9b6">箭头</span></em><span data-lake-id="u38758603" id="u38758603"> 语法。<br /></span><span data-lake-id="uc2461aad" id="uc2461aad">如果函数中只有一句表达式，可以使用简写语法：</span></p><p data-lake-id="u527ce3a8" id="u527ce3a8"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22bool%20isNoble(int%20atomicNumber)%20%3D%3E%20_nobleGases%5BatomicNumber%5D%20!%3D%20null%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2255c5f3f2%22%7D"></card><p data-lake-id="u45b153ba" id="u45b153ba"><br></p><p data-lake-id="uba02049b" id="uba02049b"><br></p><p data-lake-id="ub7909993" id="ub7909993"><br></p><h4 data-lake-id="a73dcf54" id="a73dcf54"><span data-lake-id="u69808dc3" id="u69808dc3">7.2 可选参数</span></h4><p data-lake-id="u7bd95baa" id="u7bd95baa"><br></p><blockquote data-lake-id="ub63c8231" id="ub63c8231"><p data-lake-id="u884761af" id="u884761af"><span data-lake-id="udb9889d1" id="udb9889d1">函数有两种参数类型: required 和 optional。 required 类型参数在参数最前面， 随后是 optional 类型参数。</span></p></blockquote><p data-lake-id="u3ee8f897" id="u3ee8f897"><br></p><p data-lake-id="u61d0736e" id="u61d0736e"><span data-lake-id="u973a26d1" id="u973a26d1">可选参数可以是命名参数或者位置参数，但一个参数只能选择其中一种方式修饰；<br /></span><strong><span data-lake-id="u1e1d2f0b" id="u1e1d2f0b">可选位置参数</span></strong><span data-lake-id="u4ee1170e" id="u4ee1170e"><br /></span><span data-lake-id="u6bee1ed4" id="u6bee1ed4">将参数放到 [] 中来标记参数是可选的：</span></p><p data-lake-id="u4f149eb2" id="u4f149eb2"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22getHttpUrl(String%20server%2C%20String%20path%2C%20%5Bint%20port%3D80%2C%20int%20numRetries%3A%203%5D)%20%7B%5Cn%20%20%2F%2F%20...%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2206452151%22%7D"></card><p data-lake-id="u7c1e3238" id="u7c1e3238"><br></p><p data-lake-id="u1581a7f9" id="u1581a7f9"><strong><span data-lake-id="u70d8f8c1" id="u70d8f8c1">可选命名参数</span></strong><span data-lake-id="u5b93df44" id="u5b93df44"><br /></span><span data-lake-id="u6a7eb8d6" id="u6a7eb8d6">调用方法的时候，可以使用 paramName: value 的形式来指定参数的名称，这样就可以根据paramName得知参数的含义，提高代码的可读性。<br /></span><span data-lake-id="ud00cbaa7" id="ud00cbaa7">由 { } 包装的参数是命名的可选参数:</span></p><p data-lake-id="u1bb3544c" id="u1bb3544c"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22getHttpUrl(String%20server%2C%20String%20path%2C%20%7Bint%20port%3A%2080%2C%20int%20numRetries%3A%203%7D)%20%7B%5Cn%20%20%2F%2F%20...%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2293a9dd81%22%7D"></card><p data-lake-id="u4dbf48f8" id="u4dbf48f8"><br></p><p data-lake-id="ubf5cfce3" id="ubf5cfce3"><br></p><p data-lake-id="u6020a880" id="u6020a880"><br></p><h4 data-lake-id="f6ee72b6" id="f6ee72b6"><span data-lake-id="ud95889e6" id="ud95889e6">7. 3 默认参数值</span></h4><p data-lake-id="ufd5e1c34" id="ufd5e1c34"><br></p><p data-lake-id="u7ef44ed4" id="u7ef44ed4"><span data-lake-id="u237954e2" id="u237954e2">可以使用 = 来定义可选参数的默认值， 默认值必须是编译时常量。如果没有提供默认值，则默认值为 null。</span></p><p data-lake-id="u8191ab58" id="u8191ab58"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22String%20say(String%20from%2C%20String%20msg%2C%5Cn%20%20%20%20%5BString%20device%20%3D%20'carrier%20pigeon'%2C%20String%20mood%5D)%20%7B%5Cn%20%20var%20result%20%3D%20'%24from%20says%20%24msg'%3B%5Cn%20%20if%20(device%20!%3D%20null)%20%7B%5Cn%20%20%20%20result%20%3D%20'%24result%20with%20a%20%24device'%3B%5Cn%20%20%7D%5Cn%20%20if%20(mood%20!%3D%20null)%20%7B%5Cn%20%20%20%20result%20%3D%20'%24result%20(in%20a%20%24mood%20mood)'%3B%5Cn%20%20%7D%5Cn%20%20return%20result%3B%5Cn%7D%5Cn%5Cnassert(say('Bob'%2C%20'Howdy')%20%3D%3D%5Cn%20%20%20%20'Bob%20says%20Howdy%20with%20a%20carrier%20pigeon')%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22aa0ea574%22%7D"></card><p data-lake-id="ub5b596d5" id="ub5b596d5"><br></p><p data-lake-id="ubab04fdf" id="ubab04fdf"><br></p><p data-lake-id="ue0eb4e3d" id="ue0eb4e3d"><br></p><h4 data-lake-id="fd145715" id="fd145715"><span data-lake-id="ue3c9f23a" id="ue3c9f23a">7.4 main函数</span></h4><p data-lake-id="ua718375b" id="ua718375b"><br></p><p data-lake-id="ud8347c29" id="ud8347c29"><span data-lake-id="u3eca69a1" id="u3eca69a1">每个应用都需要有个顶级的main() 函数来作为入口才能执行。main()函数的返回值为 void 并且有个可选的 List 参数。</span></p><p data-lake-id="udb22b731" id="udb22b731"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22void%20main()%7B%5Cn%20%20void%20printName(String%20name)%20%7B%5Cn%20%20%20%20print('name%20is%20%24name')%3B%5Cn%20%20%7D%5Cn%20printName('liuwangshu')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22fdcf82df%22%7D"></card><p data-lake-id="u8673667a" id="u8673667a"><br></p><p data-lake-id="u5e59c722" id="u5e59c722"><br></p><p data-lake-id="uc5eda459" id="uc5eda459"><br></p><h4 data-lake-id="59a714c3" id="59a714c3"><span data-lake-id="u5db7d711" id="u5db7d711">7.5 词法闭包</span></h4><p data-lake-id="u81bc63bb" id="u81bc63bb"><br></p><p data-lake-id="u3bdd5087" id="u3bdd5087"><em><span data-lake-id="ub72e6cd9" id="ub72e6cd9">闭包</span></em><span data-lake-id="u11e971d7" id="u11e971d7"> 即一个函数对象，即使函数对象的调用在它原始作用域之外， 依然能够访问在它词法作用域内的变量。<br /></span><span data-lake-id="u390cd1cf" id="u390cd1cf">函数可以封闭定义到它作用域内的变量。 接下来的示例中， makeAdder() 捕获了变量 addBy。 无论在什么时候执行返回函数，函数都会使用捕获的 addBy 变量。</span></p><p data-lake-id="u10e0b1c8" id="u10e0b1c8"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%2F%2F%2F%20%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%8E%20%5BaddBy%5D%20%E7%9B%B8%E5%8A%A0%E3%80%82%5CnFunction%20makeAdder(num%20addBy)%20%7B%5Cn%20%20return%20(num%20i)%20%3D%3E%20addBy%20%2B%20i%3B%5Cn%7D%5Cn%5Cnvoid%20main()%20%7B%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8A%A0%202%20%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%5Cn%20%20var%20add2%20%3D%20makeAdder(2)%3B%5Cn%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8A%A0%204%20%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%82%5Cn%20%20var%20add4%20%3D%20makeAdder(4)%3B%5Cn%5Cn%20%20assert(add2(3)%20%3D%3D%205)%3B%5Cn%20%20assert(add4(3)%20%3D%3D%207)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22f3da9131%22%7D"></card><p data-lake-id="u5c9d8222" id="u5c9d8222"><br></p><p data-lake-id="u9fa9a621" id="u9fa9a621"><br></p><p data-lake-id="u8e285020" id="u8e285020"><br></p><h3 data-lake-id="1eccb737" id="1eccb737"><span data-lake-id="uc73d4882" id="uc73d4882">8. 流程控制语句</span></h3><p data-lake-id="u3a4cfc16" id="u3a4cfc16"><br></p><p data-lake-id="u7aa0204b" id="u7aa0204b"><span data-lake-id="uca15ff1b" id="uca15ff1b">Dart的流程控制语句如下：</span></p><p data-lake-id="u964c9d4b" id="u964c9d4b"><br></p><ul list="u5a53686f"><li fid="u6625830a" data-lake-id="uf58fdc6d" id="uf58fdc6d"><span data-lake-id="u3a1a36d4" id="u3a1a36d4">if 和 else</span></li><li fid="u6625830a" data-lake-id="u6cce67e1" id="u6cce67e1"><span data-lake-id="u50b03299" id="u50b03299">for循环</span></li><li fid="u6625830a" data-lake-id="u0c561be0" id="u0c561be0"><span data-lake-id="u00a5fdae" id="u00a5fdae">while和do- while循环</span></li><li fid="u6625830a" data-lake-id="uf5d241a8" id="uf5d241a8"><span data-lake-id="u97721032" id="u97721032">break和continue</span></li><li fid="u6625830a" data-lake-id="ud2246d16" id="ud2246d16"><span data-lake-id="u10443e82" id="u10443e82">switch和case</span></li><li fid="u6625830a" data-lake-id="u8d5fcf4b" id="u8d5fcf4b"><span data-lake-id="ue2c7c0ae" id="ue2c7c0ae">assert</span></li></ul><p data-lake-id="u18849d32" id="u18849d32"><br></p><p data-lake-id="u11aa65da" id="u11aa65da"><span data-lake-id="u25feda86" id="u25feda86">这些语句的大部分都和Java差不多，这里主要讲解for循环和switch语句。</span></p><p data-lake-id="ua6e428cf" id="ua6e428cf"><br></p><h4 data-lake-id="44ecc086" id="44ecc086"><span data-lake-id="ubabec80a" id="ubabec80a">8.1 for循环</span></h4><p data-lake-id="u0777bd28" id="u0777bd28"><br></p><p data-lake-id="uc5b30ebb" id="uc5b30ebb"><span data-lake-id="u34bab599" id="u34bab599">标准的 for 循环：</span></p><p data-lake-id="u194368d8" id="u194368d8"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%20%20var%20message%20%3D%20new%20StringBuffer(%5C%22%E5%BC%A0%E6%97%A0%E5%BF%8C%5C%22)%3B%5Cn%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%203%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20message.write('!')%3B%5Cn%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22217aacdc%22%7D"></card><p data-lake-id="uc72c0fb7" id="uc72c0fb7"><br></p><p data-lake-id="u742054cd" id="u742054cd"><span data-lake-id="uaae26dc2" id="uaae26dc2">List和Set等实现了Iterable接口的类还支持for-in形式的遍历:</span></p><p data-lake-id="u9d5d4ba6" id="u9d5d4ba6"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22var%20hero%20%3D%20%5B'%E5%BC%A0%E6%97%A0%E5%BF%8C'%2C%20'%E9%A3%8E%E6%B8%85%E6%89%AC'%2C%20'%E5%BC%A0%E4%B8%89%E4%B8%B0'%2C%20'%E7%8B%AC%E5%AD%A4%E6%B1%82%E8%B4%A5'%2C%20'%E8%90%A7%E5%B3%B0'%5D%3B%5Cnfor%20(var%20h%20in%20hero)%20%7B%5Cn%20%20print(h)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%223a5eb8a6%22%7D"></card><p data-lake-id="udb144ae5" id="udb144ae5"><br></p><p data-lake-id="u268d8eec" id="u268d8eec"><br></p><p data-lake-id="u288d1ae2" id="u288d1ae2"><br></p><h4 data-lake-id="ac2b7998" id="ac2b7998"><span data-lake-id="u9055a5ab" id="u9055a5ab">8.2 switch和case</span></h4><p data-lake-id="u09a681e0" id="u09a681e0"><br></p><p data-lake-id="uc427dbe7" id="uc427dbe7"><span data-lake-id="ubd5e33c2" id="ubd5e33c2">Dart中Switch语句通过使用 == 来比较整型、字符串或者编译时常量。被比较的对象必须都是同一个类的实例（不能是其子类），并且这个类不允许覆写 ==。另外，枚举类型很适用于在Switch语句使用。</span></p><p data-lake-id="u4593be8a" id="u4593be8a"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%20%20String%20today%3D'Friday'%3B%5Cn%20%20switch(today)%7B%5Cn%20%20%20%20case%20'Monday'%3A%5Cn%20%20%20%20%20%20print('%E6%98%9F%E6%9C%9F%E4%B8%80')%3B%5Cn%20%20%20%20%20%20break%3B%5Cn%20%20%20%20case%20'Friday'%3A%5Cn%20%20%20%20%20%20print('%E6%98%9F%E6%9C%9F%E4%BA%94')%3B%5Cn%20%20%20%20%20%20break%3B%5Cn%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%227779ec26%22%7D"></card><p data-lake-id="u68b47bd4" id="u68b47bd4"><br></p><h3 data-lake-id="oa4SD" id="oa4SD"><span data-lake-id="u1ae9f90d" id="u1ae9f90d">9. 类和泛型</span></h3><p data-lake-id="uf7c8b15f" id="uf7c8b15f"><span data-lake-id="u508aea0f" id="u508aea0f">参考官网描述：</span><a href="https://www.dartcn.com/guides/language/language-tour#%E4%BD%BF%E7%94%A8%E7%B1%BB%E7%9A%84%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F" target="_blank" data-lake-id="uee3338f7" id="uee3338f7"><span data-lake-id="udcb01d81" id="udcb01d81">类</span></a></p><p data-lake-id="ufcd1080d" id="ufcd1080d"><span data-lake-id="ua7103d21" id="ua7103d21">参考官网描述：</span><a href="https://www.dartcn.com/guides/language/language-tour#%E6%B3%9B%E5%9E%8B" target="_blank" data-lake-id="u5fb5c5ce" id="u5fb5c5ce"><span data-lake-id="ud4c45d5c" id="ud4c45d5c">泛型</span></a></p><h3 data-lake-id="76d6d866" id="76d6d866"><span data-lake-id="u61a3102f" id="u61a3102f">10.捕获异常</span></h3><p data-lake-id="u7583836a" id="u7583836a"><br></p><ul list="ue18b28a1"><li fid="u53f91361" data-lake-id="u76b2375c" id="u76b2375c"><span data-lake-id="ubc887468" id="ubc887468">throw:可以throw任何非null对象，但更推荐Error和Exception或他们的子类；</span></li><li fid="u53f91361" data-lake-id="u25ff925a" id="u25ff925a"><span data-lake-id="u672bb053" id="u672bb053">catch：捕获异常对象，函数可以指定1到2个参数， 第一个参数为抛出的异常对象， 第二个为堆栈信息；</span></li><li fid="u53f91361" data-lake-id="ue413af2c" id="ue413af2c"><span data-lake-id="u47c4dd6e" id="u47c4dd6e">on：指定异常类型，捕获语句中可以同时使用 on 和 catch ，也可以单独分开使用；</span></li><li fid="u53f91361" data-lake-id="u02a77c48" id="u02a77c48"><span data-lake-id="u9cb9d53b" id="u9cb9d53b">finally：不管是否抛出异常， finally 中的代码都会被执行。</span></li></ul><p data-lake-id="u13172897" id="u13172897"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22void%20main(List%3CString%3E%20arguments)%20%7B%5Cn%20%20try%20%7B%5Cn%20%20%20%20testThrow()%3B%5Cn%20%20%7D%20on%20String%20catch(e)%7B%5Cn%20%20%20%20print('exception%20with%20on%3A%20%24e')%3B%5Cn%20%20%7D%20catch%20(e)%20%7B%5Cn%20%20%20%20print('exception%3A%20%24e')%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5CntestThrow()%7B%5Cn%20%20throw%20'a%20string'%3B%2F%2F%E5%8F%AF%E4%BB%A5throw%E4%BB%BB%E4%BD%95%E9%9D%9Enull%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%BD%86%E6%9B%B4%E6%8E%A8%E8%8D%90Error%E5%92%8CException%E6%88%96%E4%BB%96%E4%BB%AC%E7%9A%84%E5%AD%90%E7%B1%BB%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22f1d20d89%22%7D"></card><p data-lake-id="ub12a2629" id="ub12a2629"><br></p><h3 data-lake-id="9fe9af54" id="9fe9af54"><span data-lake-id="u1f88cf1b" id="u1f88cf1b">11.库的使用</span></h3><p data-lake-id="u252a1e9f" id="u252a1e9f"><br></p><p data-lake-id="u4adf5d23" id="u4adf5d23"><span data-lake-id="u15868637" id="u15868637">使用import来引入一个库，对于Dart语言内置的库，使用dart: scheme。对于第三方的库，可以使用文件系统路径或者 package: scheme。</span></p><p data-lake-id="u841abc8f" id="u841abc8f"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22import%20'dart%3Aio'%3B%5Cnimport%20'package%3Amylib%2Fmylib.dart'%3B%5Cnimport%20'package%3Autils%2Futils.dart'%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22ad9915ed%22%7D"></card><p data-lake-id="u40f8b428" id="u40f8b428"><br></p><p data-lake-id="uda73d7e2" id="uda73d7e2"><strong><span data-lake-id="u6b0fdce6" id="u6b0fdce6">导入库的一部分</span></strong><span data-lake-id="ue0fc1afb" id="ue0fc1afb"><br /></span><span data-lake-id="u41481715" id="u41481715">如果只使用库的一部分功能，则可以选择需要导入的部分内容。其中show代表只导入指定的部分，hide代表除了指定的部分都导入。</span></p><p data-lake-id="u08eb8b30" id="u08eb8b30"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%2F%2F%20%E5%8F%AA%E5%AF%BC%E5%85%A5foo%5Cnimport%20'package%3Alib1%2Flib1.dart'%20show%20foo%3B%5Cn%5Cn%2F%2F%20%E9%99%A4%E4%BA%86foo%EF%BC%8C%E5%85%B6%E4%BB%96%E9%83%A8%E5%88%86%E9%83%BD%E5%AF%BC%E5%85%A5%5Cnimport%20'package%3Alib2%2Flib2.dart'%20hide%20foo%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%222fb21619%22%7D"></card><p data-lake-id="uecf10a7f" id="uecf10a7f"><br></p><p data-lake-id="ub43d3ffa" id="ub43d3ffa"><strong><span data-lake-id="uf4afa0f9" id="uf4afa0f9">延迟加载库</span></strong><span data-lake-id="uef4faac7" id="uef4faac7"><br /></span><span data-lake-id="uef99c080" id="uef99c080">延迟加载意味着应用程序可以在需要的时候再加载库，使用延迟加载库的场景主要有以下几点：</span></p><p data-lake-id="u22805cb3" id="u22805cb3"><br></p><ul list="ubb6aac84"><li fid="u1f88026c" data-lake-id="u05d36cdb" id="u05d36cdb"><span data-lake-id="u016fbcde" id="u016fbcde">减少APP的初始启动时间。</span></li><li fid="u1f88026c" data-lake-id="ua2f522c8" id="ua2f522c8"><span data-lake-id="u35a5b99d" id="u35a5b99d">执行A/B测试，例如尝试各种算法的不同实现。</span></li><li fid="u1f88026c" data-lake-id="u2438449a" id="u2438449a"><span data-lake-id="u33141f09" id="u33141f09">加载很少使用的功能。</span></li></ul><p data-lake-id="u0b574b53" id="u0b574b53"><br></p><p data-lake-id="ubbac70a9" id="ubbac70a9"><span data-lake-id="ufdac4bd2" id="ufdac4bd2">要延迟加载一个库，需要先使用 eferred as来导入：<br /></span><span data-lake-id="u2cd2732f" id="u2cd2732f">import 'package:deferred/hello.dart' deferred as hello;</span></p><p data-lake-id="uf17cde15" id="uf17cde15"><br></p><p data-lake-id="uca291603" id="uca291603"><span data-lake-id="ud2bea26d" id="ud2bea26d">当需要使用的时候，调用loadLibrary() 函数来加载库：</span></p><p data-lake-id="u81c16de4" id="u81c16de4"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22greet()%20async%20%7B%5Cn%20%20await%20hello.loadLibrary()%3B%5Cn%20%20hello.printGreeting()%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22a81bde95%22%7D"></card><p data-lake-id="u457e3242" id="u457e3242"><br></p><p data-lake-id="u165d99bc" id="u165d99bc"><br></p><p data-lake-id="u1d9854c5" id="u1d9854c5"><br></p><h3 data-lake-id="a6a9c28b" id="a6a9c28b"><span data-lake-id="u8ca3ffbf" id="u8ca3ffbf">12.Dart异步编程</span></h3><p data-lake-id="ubc204792" id="ubc204792"><br></p><p data-lake-id="u4177578c" id="u4177578c"><br></p><p data-lake-id="u3b9bacbe" id="u3b9bacbe"><br></p><h4 data-lake-id="a68bf1ac" id="a68bf1ac"><span data-lake-id="ue9d313a6" id="ue9d313a6">12.1 异步编程技术</span></h4><p data-lake-id="u84362643" id="u84362643"><br></p><p data-lake-id="u988d6d52" id="u988d6d52"><span data-lake-id="u42fe6987" id="u42fe6987">编程中的代码执行，通常分为同步与异步两种。简单说，同步就是按照代码的编写顺序，从上到下依次执行，这也是最简单的我们最常接触的一种形式。但是同步代码的缺点也显而易见，如果其中某一行或几行代码非常耗时，那么就会阻塞，使得后面的代码不能被立刻执行。<br /></span><span data-lake-id="ua5644bef" id="ua5644bef">异步的出现正是为了解决这种问题，一般常见的解决方案有如下两种：</span></p><p data-lake-id="udbab5f2d" id="udbab5f2d"><br></p><ol list="ueec9ff3a"><li fid="u37805aa7" data-lake-id="uad374682" id="uad374682"><span data-lake-id="u290d92d8" id="u290d92d8">多线程实现，有线程开销，同时需要处理多线程数据安全问题；</span></li><li fid="u37805aa7" data-lake-id="u362d9bb8" id="u362d9bb8"><span data-lake-id="u4a1153d3" id="u4a1153d3">基于事件的异步模型，单线程中存在一个事件循环和一个事件队列，事件循环不断的从事件队列中取出事件来执行。</span></li></ol><p data-lake-id="uc64dad1e" id="uc64dad1e"><br></p><p data-lake-id="u6ec87441" id="u6ec87441"><span data-lake-id="u64a709a8" id="u64a709a8">Dart 是事件驱动的体系结构，该结构基于具有单个事件循环和两个队列的单线程执行模型。<br /></span><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F25382485%2F1653287954552-cb0e46bf-bd09-4023-8dab-b9a3214e3074.png%23clientId%3Due6da0603-ef9f-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D465%26id%3DCOdZ9%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D930%26originWidth%3D1468%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D1010715%26status%3Ddone%26style%3Dnone%26taskId%3Du46f01cc1-0846-4bb8-87c6-31bedbfbb3a%26title%3D%26width%3D734%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1468%2C%22originHeight%22%3A930%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22PujXh%22%7D"></card></p><p data-lake-id="u66576d61" id="u66576d61"><br></p><p data-lake-id="u64b0d74c" id="u64b0d74c"><br></p><p data-lake-id="uf8870d5c" id="uf8870d5c"><br></p><h4 data-lake-id="a28fce62" id="a28fce62"><span data-lake-id="u6776b706" id="u6776b706">12.2 Dart的事件循环</span></h4><p data-lake-id="ua1629eee" id="ua1629eee"><br></p><p data-lake-id="u5492c566" id="u5492c566"><span data-lake-id="u37adf195" id="u37adf195">Dart 是事件驱动的体系结构，该结构基于具有单个事件循环和两个队列的单线程执行模型。<br /></span><span data-lake-id="uc254867b" id="uc254867b">Dart 的两个队列分别是</span></p><p data-lake-id="u9a257262" id="u9a257262"><br></p><ul list="u07a2f78e"><li fid="u81498fef" data-lake-id="uef564901" id="uef564901"><span data-lake-id="u61acee50" id="u61acee50">MicroTask queue 微任务队列</span></li><li fid="u81498fef" data-lake-id="uf5a71bba" id="uf5a71bba"><span data-lake-id="udb134914" id="udb134914">Event queue 事件队列</span></li></ul><p data-lake-id="u646b9df0" id="u646b9df0"><br></p><p data-lake-id="u34f5dc51" id="u34f5dc51"><span data-lake-id="udd2d1871" id="udd2d1871">Dart事件循环执行如上图所示</span></p><p data-lake-id="u3613749d" id="u3613749d"><br></p><ol list="u685fd082"><li fid="uc3df9f61" data-lake-id="uf4e3df10" id="uf4e3df10"><span data-lake-id="u0909d29a" id="u0909d29a">先查看MicroTask队列是否为空，不是则先执行MicroTask队列</span></li><li fid="uc3df9f61" data-lake-id="ucca844a7" id="ucca844a7"><span data-lake-id="u89d848ca" id="u89d848ca">一个MicroTask执行完后，检查有没有下一个MicroTask，直到MicroTask队列为空，才去执行Event队列</span></li><li fid="uc3df9f61" data-lake-id="ub6d0aa78" id="ub6d0aa78"><span data-lake-id="ud5cbb8e2" id="ud5cbb8e2">在Evnet 队列取出一个事件处理完后，再次返回第一步，去检查MicroTask队列是否为空</span></li></ol><p data-lake-id="u0f221f18" id="u0f221f18"><br></p><p data-lake-id="u2e7c1329" id="u2e7c1329"><span data-lake-id="u241ac6cc" id="u241ac6cc">我们可以看出，将任务加入到MicroTask中可以被尽快执行，但也需要注意，当事件循环在处理MicroTask队列时，Event队列会被卡住，应用程序无法处理鼠标单击、I/O消息等等事件。<br /></span><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2022%2Fpng%2F22931%2F1653365168725-949f347e-a98a-4531-8b1f-d85e382aad25.png%23clientId%3Du977236e1-8d4b-4%26crop%3D0%26crop%3D0%26crop%3D1%26crop%3D1%26from%3Dpaste%26height%3D391%26id%3Duecef049e%26margin%3D%255Bobject%2520Object%255D%26name%3Dimage.png%26originHeight%3D675%26originWidth%3D596%26originalType%3Dbinary%26ratio%3D1%26rotation%3D0%26showTitle%3Dfalse%26size%3D371834%26status%3Ddone%26style%3Dnone%26taskId%3Du32e565b2-7a27-4be7-9ecb-cb88c152109%26title%3D%26width%3D345%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A596%2C%22originHeight%22%3A675%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22uuw5x%22%7D"></card></p><p data-lake-id="uac743261" id="uac743261"><br></p><p data-lake-id="uedf76b2b" id="uedf76b2b"><br></p><p data-lake-id="u892b8150" id="u892b8150"><br></p><h4 data-lake-id="3a2b42db" id="3a2b42db"><span data-lake-id="u6407153a" id="u6407153a">12.3 队列任务添加</span></h4><p data-lake-id="u58698fb8" id="u58698fb8"><br></p><p data-lake-id="u8d45bd84" id="u8d45bd84"><span data-lake-id="u2cfc8ab2" id="u2cfc8ab2">针对事件队列和微任务队列，Dart分别提供了API来向两个队列添加可执行任务：<br /></span><strong><span data-lake-id="u4a6d8d5d" id="u4a6d8d5d">将任务添加到MicroTask队列有两种方法：</span></strong></p><p data-lake-id="u2ccd4f10" id="u2ccd4f10"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20%20'dart%3Aasync'%3B%5Cn%5Cnvoid%20%20myTask()%7B%5Cn%20%20%20%20print(%5C%22this%20is%20my%20task%5C%22)%3B%5Cn%7D%5Cn%5Cnvoid%20%20main()%20%7B%5Cn%20%20%20%20%2F%2F%201.%20%E4%BD%BF%E7%94%A8%20scheduleMicrotask%20%E6%96%B9%E6%B3%95%E6%B7%BB%E5%8A%A0%5Cn%20%20%20%20scheduleMicrotask(myTask)%3B%5Cn%5Cn%20%20%20%20%2F%2F%202.%20%E4%BD%BF%E7%94%A8Future%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%5Cn%20%20%20%20new%20%20Future.microtask(myTask)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2204b90b4d%22%7D"></card><p data-lake-id="u297aca2a" id="u297aca2a"><br></p><p data-lake-id="u819d50ce" id="u819d50ce"><strong><span data-lake-id="u426da075" id="u426da075">将任务添加到Event队列：</span></strong></p><p data-lake-id="ud35f3f79" id="ud35f3f79"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20%20'dart%3Aasync'%3B%5Cn%5Cnvoid%20%20myTask()%7B%5Cn%20%20%20%20print(%5C%22this%20is%20my%20task%5C%22)%3B%5Cn%7D%5Cn%5Cnvoid%20%20main()%20%7B%5Cn%20%20%20%20new%20%20Future(myTask)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22f8280275%22%7D"></card><p data-lake-id="u3299b96d" id="u3299b96d"><br></p><p data-lake-id="u0e38aabe" id="u0e38aabe"><span data-lake-id="u4acaedec" id="u4acaedec">代码验证：</span></p><p data-lake-id="u8f86f45f" id="u8f86f45f"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20%20'dart%3Aasync'%3B%5Cn%5Cnvoid%20%20main()%20%7B%5Cn%20%20%20%20print(%5C%22main%20start%5C%22)%3B%5Cn%5Cn%20%20%20%20new%20%20Future(()%7B%5Cn%20%20%20%20%20%20%20%20print(%5C%22this%20is%20my%20task%5C%22)%3B%5Cn%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20new%20%20Future.microtask(()%7B%5Cn%20%20%20%20%20%20%20%20print(%5C%22this%20is%20microtask%5C%22)%3B%5Cn%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20print(%5C%22main%20stop%5C%22)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22468ea330%22%7D"></card><p data-lake-id="uca7ce426" id="uca7ce426"><br></p><p data-lake-id="u6de48499" id="u6de48499"><span data-lake-id="u4e941ffb" id="u4e941ffb">运行结果：</span></p><p data-lake-id="u219b7f73" id="u219b7f73"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22main%20start%5Cnmain%20stop%5Cnthis%20is%20microtask%5Cnthis%20is%20my%20task%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%225d1a2d71%22%7D"></card><p data-lake-id="u51324bdd" id="u51324bdd"><br></p><p data-lake-id="u69fc0d80" id="u69fc0d80"><br></p><p data-lake-id="ua48a3013" id="ua48a3013"><br></p><h4 data-lake-id="d9328d70" id="d9328d70"><span data-lake-id="uc792df7f" id="uc792df7f">12.4 Future</span></h4><p data-lake-id="uffa5c006" id="uffa5c006"><br></p><p data-lake-id="uaa42085e" id="uaa42085e"><span data-lake-id="u5360de7c" id="u5360de7c">Future类是对未来结果的一个代理，使用方法基本同JavaScript中的Promise。<br /></span><span data-lake-id="ufd9f9fc4" id="ufd9f9fc4">Future的几种创建方法</span></p><p data-lake-id="ua383f342" id="ua383f342"><br></p><ul list="u5d186f6f"><li fid="u9b3a6f1f" data-lake-id="u53fd8952" id="u53fd8952"><span data-lake-id="ud6f6b332" id="ud6f6b332">Future()：直接通过构造函数传入异步任务；</span></li><li fid="u9b3a6f1f" data-lake-id="u67c80494" id="u67c80494"><span data-lake-id="u4f5f5842" id="u4f5f5842">Future.microtask()：构造微任务的Future；</span></li><li fid="u9b3a6f1f" data-lake-id="uba37abb8" id="uba37abb8"><span data-lake-id="u89fd9f67" id="u89fd9f67">Future.sync() : 同步方法，会理解被执行；</span></li><li fid="u9b3a6f1f" data-lake-id="u3cd3fcc3" id="u3cd3fcc3"><span data-lake-id="uc53ed853" id="uc53ed853">Future.value()：创建一个有值返回的Future。如果传入的参数又是Future，则创建的Future将等待返回的future完成后将相同类型的结果返回；类比Promise.resolve();</span></li><li fid="u9b3a6f1f" data-lake-id="u28a3f436" id="u28a3f436"><span data-lake-id="u772c457f" id="u772c457f">Future.error:创建一个发生异常的Future，类比Promise.reject();</span></li><li fid="u9b3a6f1f" data-lake-id="u543fe9fd" id="u543fe9fd"><span data-lake-id="u54ea5f54" id="u54ea5f54">Future.delayed()：延时任务，表示在延迟时间到了之后将任务加入到Event队列。</span></li></ul><p data-lake-id="u7b03b40c" id="u7b03b40c"><br></p><p data-lake-id="ubc2167d5" id="ubc2167d5"><br></p><p data-lake-id="ud540b9de" id="ud540b9de"><br></p><h5 data-lake-id="3afd483a" id="3afd483a"><span data-lake-id="ue87e4d0a" id="ue87e4d0a">12.4.1 延时任务</span></h5><p data-lake-id="u9c93861f" id="u9c93861f"><br></p><p data-lake-id="uece4b2eb" id="uece4b2eb"><span data-lake-id="u1179a7cb" id="u1179a7cb">表示在延迟时间到了之后将任务加入到Event队列。需要注意的是，这并不是准确的，万一前面有很耗时的任务，那么你的延迟任务不一定能准时运行。</span></p><p data-lake-id="u6b103ba1" id="u6b103ba1"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22void%20testDelayedFuture()%7B%5Cn%20%20print('main%20start')%3B%5Cn%5Cn%20%20Future.delayed(Duration(seconds%3A1)%2C()%7B%5Cn%20%20%20%20print('task%20delayed')%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20Future(()%7B%5Cn%20%20%20%20%2F%2F%20%E6%A8%A1%E6%8B%9F%E8%80%97%E6%97%B65%E7%A7%92%5Cn%20%20%20%20sleep(Duration(seconds%3A5))%3B%5Cn%20%20%20%20print('5s%20task')%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20print('main%20stop')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2238fad390%22%7D"></card><p data-lake-id="u769b18ff" id="u769b18ff"><br></p><p data-lake-id="u2baa27f3" id="u2baa27f3"><br></p><p data-lake-id="uc5b114a3" id="uc5b114a3"><br></p><h5 data-lake-id="c0c7005b" id="c0c7005b"><span data-lake-id="u36e1ad15" id="u36e1ad15">12.4.2 回调处理</span></h5><p data-lake-id="u40d090ad" id="u40d090ad"><br></p><p data-lake-id="u03bf0209" id="u03bf0209"><span data-lake-id="u74e4ee7c" id="u74e4ee7c">创建完成Future对象后，可以通过then方法接收Future的结果：</span></p><p data-lake-id="u493c013f" id="u493c013f"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22void%20testFuture()%20%7B%5Cn%20%20Future(()%20%7B%5Cn%20%20%20%20return%20'future%20value'%3B%5Cn%20%20%7D).then((value)%20%7B%5Cn%20%20%20%20print('onValue%3A%20%24value')%3B%5Cn%20%20%7D%2C%20onError%3A%20(error)%20%7B%5Cn%20%20%20%20print('onError%20%24error')%3B%5Cn%20%20%7D)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22b7133f4f%22%7D"></card><p data-lake-id="u431981c1" id="u431981c1"><br></p><p data-lake-id="u6cc5fc2f" id="u6cc5fc2f"><span data-lake-id="u813cd956" id="u813cd956">then方法的返回值也是一个Future，可以继续对这个对象调用then方法，注册接收结果的函数。后注册then函数接收的就是前一个then函数的返回值，如果前一个函数没有返回值，后面就接收到null值。</span></p><p data-lake-id="u966ae064" id="u966ae064"><br></p><h5 data-lake-id="13d0d918" id="13d0d918"><span data-lake-id="ubfc78ad3" id="ubfc78ad3">12.4.3 处理多个Future</span></h5><p data-lake-id="u5577d1e6" id="u5577d1e6"><br></p><p data-lake-id="u24ce2e62" id="u24ce2e62"><span data-lake-id="u804090e3" id="u804090e3">使用</span><strong><span data-lake-id="ud0a9edaf" id="ud0a9edaf">静态方法</span></strong><span data-lake-id="u96fe2c5f" id="u96fe2c5f">wait 等待多个任务全部完成后回调。</span></p><p data-lake-id="u7dd9f97d" id="u7dd9f97d"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22void%20testWaitFutures()%7B%5Cn%20%20print('main%20start')%3B%5Cn%5Cn%20%20var%20task1%20%3D%20Future(()%7B%5Cn%20%20%20%20print('task%201')%3B%5Cn%20%20%20%20return%201%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20var%20task2%20%3D%20Future(()%7B%5Cn%20%20%20%20print('task%202')%3B%5Cn%20%20%20%20return%202%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20var%20task3%20%3D%20Future(()%7B%5Cn%20%20%20%20print('task%203')%3B%5Cn%20%20%20%20return%203%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20Future%20fut%20%3D%20Future.wait(%5Btask1%2C%20task2%2C%20task3%5D)%3B%5Cn%20%20fut.then((responses)%7B%5Cn%20%20%20%20print(responses)%3B%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20print('main%20stop')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2247b1c12d%22%7D"></card><p data-lake-id="udb9678fb" id="udb9678fb"><br></p><p data-lake-id="uca1c5f7c" id="uca1c5f7c"><br></p><p data-lake-id="uee1560c2" id="uee1560c2"><br></p><h4 data-lake-id="e4773935" id="e4773935"><span data-lake-id="u0e5ec554" id="u0e5ec554">12.5 async和await</span></h4><p data-lake-id="u61496585" id="u61496585"><br></p><p data-lake-id="u4a6cb958" id="u4a6cb958"><span data-lake-id="u62456393" id="u62456393">在Dart1.9中加入了async和await关键字，有了这两个关键字，我们可以更简洁的编写异步代码，而不需要调用Future相关的API.<br /></span><span data-lake-id="u407d568e" id="u407d568e">将 async 关键字作为方法声明的后缀时，具有如下意义:</span></p><p data-lake-id="ua39b618c" id="ua39b618c"><br></p><ul list="u6531d737"><li fid="u4e6c2a40" data-lake-id="ubb66a11f" id="ubb66a11f"><span data-lake-id="u614180de" id="u614180de">被修饰的方法会将一个 Future 对象作为返回值;</span></li><li fid="u4e6c2a40" data-lake-id="u6623ccd9" id="u6623ccd9"><span data-lake-id="ua5f0f21d" id="ua5f0f21d">该方法会同步执行其中的方法的代码直到第一个 await 关键字，然后它暂停该方法其他部分的执行；</span></li><li fid="u4e6c2a40" data-lake-id="u25cade90" id="u25cade90"><span data-lake-id="u90ce4ff9" id="u90ce4ff9">一旦由 await 关键字引用的 Future 任务执行完成，await的下一行代码将立即执行。</span></li></ul><p data-lake-id="u30e4a0f4" id="u30e4a0f4"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22testAwait()%20async%7B%5Cn%20%20var%20result%20%3D%20%20await%20getname()%3B%5Cn%20%20print('result%20is%20%24result')%3B%5Cn%7D%5Cn%5CnString%20getname()%20%7B%5Cn%20%20return'zs'%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2269773e0a%22%7D"></card><p data-lake-id="ud983736f" id="ud983736f"><br></p><p data-lake-id="u409be4a1" id="u409be4a1"><br></p><p data-lake-id="u3bcde263" id="u3bcde263"><br></p><h4 data-lake-id="e0d7db21" id="e0d7db21"><span data-lake-id="ub7fae698" id="ub7fae698">参考：</span><a href="https://cloud.tencent.com/developer/article/1507845" target="_blank" data-lake-id="ub16b7a90" id="ub16b7a90"><span data-lake-id="u8a1e0f06" id="u8a1e0f06">https://cloud.tencent.com/developer/article/1507845</span></a></h4><p data-lake-id="uacbd20db" id="uacbd20db"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%20%20%20%20%20%20%20%20%20%5Bhttps%3A%2F%2Fwww.codenong.com%2Fj5ec1efe16fb9a0436e4804e2%2F%5D(https%3A%2F%2Fwww.codenong.com%2Fj5ec1efe16fb9a0436e4804e2%2F)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%229a43981a%22%7D"></card><p data-lake-id="u4e511594" id="u4e511594"><br></p><p data-lake-id="u85dd4274" id="u85dd4274"><br></p><p data-lake-id="uf3197eb5" id="uf3197eb5"><br></p><h3 data-lake-id="aac573c8" id="aac573c8"><span data-lake-id="u0c20d621" id="u0c20d621">13.让类可调用</span></h3><p data-lake-id="ub486bbed" id="ub486bbed"><br></p><p data-lake-id="u30211ec1" id="u30211ec1"><span data-lake-id="ua6dff232" id="ua6dff232">如果Dart中的类实现了call()函数，那么这个类可以当做方法来调用。</span></p><p data-lake-id="u01685b92" id="u01685b92"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22class%20JointFunction%20%7B%5Cn%20%20call(String%20a%2C%20String%20b%2C%20String%20c%2C%20String%20d)%20%3D%3E%20'%24a%20%24b%20%24c%20%24d'%3B%5Cn%7D%5Cn%5Cnmain()%20%7B%5Cn%20%20var%20jf%20%3D%20new%20JointFunction()%3B%5Cn%20%20var%20out%20%3D%20jf(%5C%22%E6%94%BE%5C%22%2C%5C%22%E6%89%8B%5C%22%2C%5C%22%E5%8E%BB%5C%22%2C%5C%22%E5%81%9A%5C%22)%3B%2F%2F1%5Cn%20%20print('%24out')%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%225cce84ef%22%7D"></card><p data-lake-id="u546f695d" id="u546f695d"><br></p><p data-lake-id="u275bfec9" id="u275bfec9"><span data-lake-id="uef4af524" id="uef4af524">在上面的示例中，JointFunction类定义了一个call()函数，它接收三个字符串并拼接它们。这样在注释1处就可以调用JointFunction类了。</span></p><p data-lake-id="u12a6b3a3" id="u12a6b3a3"><br></p><h3 data-lake-id="26a41541" id="26a41541"><span data-lake-id="u20c39069" id="u20c39069">14.创建实例</span></h3><p data-lake-id="u050a03c6" id="u050a03c6"><br></p><p data-lake-id="u39923652" id="u39923652"><span data-lake-id="u685ca3dd" id="u685ca3dd">在Java中创建实例可以用new，在Dart中你可以选择用new，也可以选择不用：</span></p><p data-lake-id="u48ca2a02" id="u48ca2a02"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22Element%20element%20%3D%20Element()%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%223b2af3e1%22%7D"></card><p data-lake-id="uc11edc92" id="uc11edc92"><br></p><p data-lake-id="u7ea9bba3" id="u7ea9bba3"><span data-lake-id="u145c3cd4" id="u145c3cd4">对于Android开发来说用new可能更习惯一些，可读性也稍微好点，不用new的话显得更简洁，至于用不用new就看团队的要求和个人的习惯吧，没有绝对的好坏之分。</span></p><p data-lake-id="ufdd77caa" id="ufdd77caa"><br></p><h3 data-lake-id="25f9c7fa" id="25f9c7fa"><span data-lake-id="u6f4d680e" id="u6f4d680e">总结</span></h3><p data-lake-id="uea533a11" id="uea533a11"><br></p><p data-lake-id="u80754852" id="u80754852"><span data-lake-id="ue3e080b3" id="ue3e080b3">Dart的知识点有很多，这里只介绍了一部分我认为需要重点掌握的部分，如果想了解更多，可以查看官方文档，关于Dart的学习可以结合Flutter边写边学，不要只抠Dart的细节。</span></p>